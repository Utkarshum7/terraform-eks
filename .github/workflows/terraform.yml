name: Terraform CI/CD

on:
  workflow_dispatch:
    inputs:
      apply:
        description: "Apply changes (true runs terraform apply)"
        required: true
        default: "false"
        type: choice
        options: ["false", "true"]
      aws-region:
        description: "AWS region"
        required: true
        default: "us-east-2"
  push:
    branches: [ main, master ]

env:
  TF_IN_AUTOMATION: true
  TF_INPUT: false

permissions:
  id-token: write
  contents: read

jobs:
  remote_infra:
    name: remote-infra (S3/DynamoDB backend)
    runs-on: ubuntu-latest
    environment: aws-apply
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ inputs.aws-region || 'us-east-2' }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform Init
        working-directory: remote-infra
        run: terraform init -input=false

      - name: Terraform Validate
        working-directory: remote-infra
        run: terraform validate

      - name: Terraform Plan
        id: plan
        working-directory: remote-infra
        run: terraform plan -input=false -no-color | tee plan.txt

      - name: Upload Plan
        uses: actions/upload-artifact@v4
        with:
          name: remote-infra-plan
          path: remote-infra/plan.txt

      - name: Terraform Apply
        if: >-
          ${{ (github.event_name == 'workflow_dispatch' && inputs.apply == 'true') || (github.event_name == 'push') }}
        working-directory: remote-infra
        run: terraform apply -input=false -auto-approve

  terraform_for_devops:
    name: terraform_for_devops
    runs-on: ubuntu-latest
    needs: remote_infra
    environment: aws-apply
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ inputs.aws-region || 'us-east-2' }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform Init
        working-directory: terraform_for_devops
        run: terraform init -input=false

      - name: Terraform Validate
        working-directory: terraform_for_devops
        run: terraform validate

      - name: Terraform Plan
        id: plan
        working-directory: terraform_for_devops
        run: terraform plan -input=false -no-color | tee plan.txt

      - name: Upload Plan
        uses: actions/upload-artifact@v4
        with:
          name: terraform_for_devops-plan
          path: terraform_for_devops/plan.txt

      - name: Terraform Apply
        if: >-
          ${ { (github.event_name == 'workflow_dispatch' && inputs.apply == 'true') || (github.event_name == 'push') } }
        working-directory: terraform_for_devops
        run: terraform apply -input=false -auto-approve

  terraform_eks:
    name: terraform-eks
    runs-on: ubuntu-latest
    needs: terraform_for_devops
    environment: aws-apply
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ inputs.aws-region || 'us-east-2' }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform Init
        working-directory: terraform-eks
        run: terraform init -input=false

      - name: Terraform Validate
        working-directory: terraform-eks
        run: terraform validate

      - name: Terraform Plan
        id: plan
        working-directory: terraform-eks
        run: terraform plan -input=false -no-color | tee plan.txt

      - name: Upload Plan
        uses: actions/upload-artifact@v4
        with:
          name: terraform-eks-plan
          path: terraform-eks/plan.txt

      - name: Terraform Apply
        if: >-
          ${ { (github.event_name == 'workflow_dispatch' && inputs.apply == 'true') || (github.event_name == 'push') } }
        working-directory: terraform-eks
        run: terraform apply -input=false -auto-approve


